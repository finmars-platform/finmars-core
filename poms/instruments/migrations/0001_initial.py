# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-05 12:27
from __future__ import unicode_literals

import datetime

import django.utils.timezone
from django.db import migrations, models

import poms.common.utils


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccrualCalculationModel',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(max_length=255, unique=True, verbose_name='system code')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='name')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_es', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_de', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_ru', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('description_en', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_es', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_de', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_ru', models.TextField(blank=True, default='', null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'accrual calculation model',
                'abstract': False,
                'verbose_name_plural': 'accrual calculation models',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AccrualCalculationSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accrual_start_date',
                 models.DateField(default=poms.common.utils.date_now, verbose_name='accrual start date')),
                ('first_payment_date',
                 models.DateField(default=poms.common.utils.date_now, verbose_name='first payment date')),
                ('accrual_size', models.FloatField(default=0.0, verbose_name='accrual size')),
                ('periodicity_n', models.IntegerField(default=0, verbose_name='periodicity n')),
                ('notes', models.TextField(blank=True, default='', verbose_name='notes')),
            ],
            options={
                'ordering': ['accrual_start_date'],
                'verbose_name_plural': 'accrual calculation schedules',
                'verbose_name': 'accrual calculation schedule',
            },
        ),
        migrations.CreateModel(
            name='CostMethod',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(max_length=255, unique=True, verbose_name='system code')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='name')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_es', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_de', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_ru', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('description_en', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_es', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_de', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_ru', models.TextField(blank=True, default='', null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'cost method',
                'abstract': False,
                'verbose_name_plural': 'cost methods',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DailyPricingModel',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(max_length=255, unique=True, verbose_name='system code')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='name')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_es', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_de', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_ru', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('description_en', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_es', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_de', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_ru', models.TextField(blank=True, default='', null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'daily pricing model',
                'abstract': False,
                'verbose_name_plural': 'daily pricing models',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EventSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('effective_date', models.DateField(blank=True, null=True, verbose_name='effective date')),
                ('notify_in_n_days', models.PositiveIntegerField(default=0)),
                ('periodicity_n', models.IntegerField(default=0)),
                ('final_date', models.DateField(default=datetime.date(9999, 12, 31))),
                ('is_auto_generated', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['effective_date'],
                'verbose_name_plural': 'event schedules',
                'verbose_name': 'event schedule',
            },
        ),
        migrations.CreateModel(
            name='EventScheduleAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, default='', max_length=100)),
                ('is_sent_to_pending', models.BooleanField(default=True)),
                ('is_book_automatic', models.BooleanField(default=True)),
                ('button_position', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['is_book_automatic', 'button_position'],
                'verbose_name_plural': 'event schedule actions',
                'verbose_name': 'event schedule action',
            },
        ),
        migrations.CreateModel(
            name='EventScheduleConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='name')),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='description')),
                ('notify_in_n_days', models.PositiveSmallIntegerField(default=0, verbose_name='notify in N days')),
                ('action_text', models.CharField(blank=True, default='', max_length=255, verbose_name='action text')),
                ('action_is_sent_to_pending', models.BooleanField(default=True)),
                ('action_is_book_automatic', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'event schedule configs',
                'verbose_name': 'event schedule config',
            },
        ),
        migrations.CreateModel(
            name='GeneratedEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_date', models.DateField(db_index=True, default=poms.common.utils.date_now)),
                ('effective_date_notified', models.BooleanField(db_index=True, default=False)),
                ('notification_date', models.DateField(db_index=True, default=poms.common.utils.date_now)),
                ('notification_date_notified', models.BooleanField(db_index=True, default=False)),
                ('status', models.PositiveSmallIntegerField(
                    choices=[(1, 'New'), (2, 'Ignored'), (3, 'Book pending'), (4, 'Booked')], db_index=True,
                    default=1)),
                ('status_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('position', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ['effective_date'],
                'verbose_name_plural': 'generated events',
                'verbose_name': 'generated event',
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('public_name',
                 models.CharField(blank=True, help_text='used if user does not have permissions to view object',
                                  max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('price_multiplier', models.FloatField(default=1.0, verbose_name='price multiplier')),
                ('accrued_multiplier', models.FloatField(default=1.0, verbose_name='accrued multiplier')),
                ('default_price', models.FloatField(default=0.0, verbose_name='default price')),
                ('default_accrued', models.FloatField(default=0.0, verbose_name='default accrued')),
                ('user_text_1',
                 models.CharField(blank=True, help_text='User specified field 1', max_length=255, null=True)),
                ('user_text_2',
                 models.CharField(blank=True, help_text='User specified field 2', max_length=255, null=True)),
                ('user_text_3',
                 models.CharField(blank=True, help_text='User specified field 3', max_length=255, null=True)),
                ('reference_for_pricing',
                 models.CharField(blank=True, default='', max_length=100, verbose_name='reference for pricing')),
                ('maturity_date', models.DateField(default=datetime.date(9999, 12, 31), verbose_name='maturity date')),
            ],
            options={
                'abstract': False,
                'permissions': [('view_instrument', 'Can view instrument'),
                                ('manage_instrument', 'Can manage instrument')],
                'verbose_name': 'instrument',
                'ordering': ['user_code'],
                'verbose_name_plural': 'instruments',
            },
        ),
        migrations.CreateModel(
            name='InstrumentClass',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(max_length=255, unique=True, verbose_name='system code')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='name')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_es', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_de', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_ru', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('description_en', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_es', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_de', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_ru', models.TextField(blank=True, default='', null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'instrument class',
                'abstract': False,
                'verbose_name_plural': 'instrument classes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InstrumentFactorSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_date', models.DateField(default=poms.common.utils.date_now, verbose_name='effective date')),
                ('factor_value', models.FloatField(default=0.0, verbose_name='factor value')),
            ],
            options={
                'ordering': ['effective_date'],
                'verbose_name_plural': 'instrument factor schedules',
                'verbose_name': 'instrument factor schedule',
            },
        ),
        migrations.CreateModel(
            name='InstrumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('public_name',
                 models.CharField(blank=True, help_text='used if user does not have permissions to view object',
                                  max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'abstract': False,
                'permissions': [('view_instrumenttype', 'Can view instrument type'),
                                ('manage_instrumenttype', 'Can manage instrument type')],
                'verbose_name': 'instrument type',
                'ordering': ['user_code'],
                'verbose_name_plural': 'instrument types',
            },
        ),
        migrations.CreateModel(
            name='ManualPricingFormula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expr', models.CharField(blank=True, default='', max_length=255, verbose_name='expression')),
                ('notes', models.TextField(blank=True, default='', verbose_name='notes')),
            ],
            options={
                'ordering': ['pricing_policy'],
                'verbose_name_plural': 'manual pricing formulas',
                'verbose_name': 'manual pricing formula',
            },
        ),
        migrations.CreateModel(
            name='PaymentSizeDetail',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(max_length=255, unique=True, verbose_name='system code')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='name')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_es', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_de', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_ru', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('description_en', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_es', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_de', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_ru', models.TextField(blank=True, default='', null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'payment size detail',
                'abstract': False,
                'verbose_name_plural': 'payment size details',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Periodicity',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('system_code', models.CharField(max_length=255, unique=True, verbose_name='system code')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='name')),
                ('name_en', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_es', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_de', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('name_ru', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='name')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('description_en', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_es', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_de', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('description_ru', models.TextField(blank=True, default='', null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'periodicity',
                'abstract': False,
                'verbose_name_plural': 'periodicities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, default=poms.common.utils.date_now, verbose_name='date')),
                ('principal_price', models.FloatField(default=0.0, verbose_name='principal price')),
                ('accrued_price', models.FloatField(default=0.0, verbose_name='accrued price')),
            ],
            options={
                'ordering': ['date'],
                'verbose_name_plural': 'price histories',
                'verbose_name': 'price history',
            },
        ),
        migrations.CreateModel(
            name='PricingPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('public_name',
                 models.CharField(blank=True, help_text='used if user does not have permissions to view object',
                                  max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('expr', models.CharField(blank=True, default='', max_length=255, verbose_name='expression')),
            ],
            options={
                'verbose_name': 'pricing policy',
                'abstract': False,
                'verbose_name_plural': 'pricing policies',
                'ordering': ['name'],
            },
        ),
    ]
