# Generated by Django 4.1.3 on 2022-12-07 21:16

import datetime

import django.utils.timezone
from django.db import migrations, models

import poms.common.utils


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AccrualCalculationModel",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="user code"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="name"
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="short name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="description"
                    ),
                ),
                (
                    "description_en",
                    models.TextField(
                        blank=True, default="", null=True, verbose_name="description"
                    ),
                ),
            ],
            options={
                "verbose_name": "accrual calculation model",
                "verbose_name_plural": "accrual calculation models",
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AccrualCalculationSchedule",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "accrual_start_date",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="accrual start date",
                    ),
                ),
                (
                    "accrual_start_date_value_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (20, "Number"),
                            (10, "String"),
                            (40, "Date"),
                            (30, "Classifier"),
                            (50, "Boolean"),
                            (60, "System Attribute"),
                            (70, "User Attribute"),
                            (100, "Relation"),
                            (110, "Selector"),
                            (120, "Button"),
                            (80, "Datetime"),
                        ],
                        default=40,
                        verbose_name="accrual start date value type",
                    ),
                ),
                (
                    "first_payment_date",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="first payment date",
                    ),
                ),
                (
                    "first_payment_date_value_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (20, "Number"),
                            (10, "String"),
                            (40, "Date"),
                            (30, "Classifier"),
                            (50, "Boolean"),
                            (60, "System Attribute"),
                            (70, "User Attribute"),
                            (100, "Relation"),
                            (110, "Selector"),
                            (120, "Button"),
                            (80, "Datetime"),
                        ],
                        default=40,
                        verbose_name="first payment date value type",
                    ),
                ),
                (
                    "accrual_size",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="accrual size",
                    ),
                ),
                (
                    "accrual_size_value_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (20, "Number"),
                            (10, "String"),
                            (40, "Date"),
                            (30, "Classifier"),
                            (50, "Boolean"),
                            (60, "System Attribute"),
                            (70, "User Attribute"),
                            (100, "Relation"),
                            (110, "Selector"),
                            (120, "Button"),
                            (80, "Datetime"),
                        ],
                        default=20,
                        verbose_name="accrual size value type",
                    ),
                ),
                (
                    "periodicity_n",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="periodicity n",
                    ),
                ),
                (
                    "periodicity_n_value_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (20, "Number"),
                            (10, "String"),
                            (40, "Date"),
                            (30, "Classifier"),
                            (50, "Boolean"),
                            (60, "System Attribute"),
                            (70, "User Attribute"),
                            (100, "Relation"),
                            (110, "Selector"),
                            (120, "Button"),
                            (80, "Datetime"),
                        ],
                        default=20,
                        verbose_name="periodicity n value type",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, default="", verbose_name="notes"),
                ),
            ],
            options={
                "verbose_name": "accrual calculation schedule",
                "verbose_name_plural": "accrual calculation schedules",
                "ordering": ["accrual_start_date"],
            },
        ),
        migrations.CreateModel(
            name="CostMethod",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="user code"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="name"
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="short name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="description"
                    ),
                ),
                (
                    "description_en",
                    models.TextField(
                        blank=True, default="", null=True, verbose_name="description"
                    ),
                ),
            ],
            options={
                "verbose_name": "cost method",
                "verbose_name_plural": "cost methods",
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "user_code",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="user code"
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="short name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="description"
                    ),
                ),
                (
                    "alpha_2",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="alpha 2"
                    ),
                ),
                (
                    "alpha_3",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="alpha 3"
                    ),
                ),
                (
                    "country_code",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="country code",
                    ),
                ),
                (
                    "iso_3166_2",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="iso_3166_2"
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="region"
                    ),
                ),
                (
                    "sub_region",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="sub region"
                    ),
                ),
                (
                    "intermediate_region",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="intermediate region",
                    ),
                ),
                (
                    "region_code",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="region code",
                    ),
                ),
                (
                    "sub_region_code",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="sub region code",
                    ),
                ),
                (
                    "intermediate_region_code",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="intermediate region code",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DailyPricingModel",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="user code"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="name"
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="short name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="description"
                    ),
                ),
                (
                    "description_en",
                    models.TextField(
                        blank=True, default="", null=True, verbose_name="description"
                    ),
                ),
            ],
            options={
                "verbose_name": "daily pricing model",
                "verbose_name_plural": "daily pricing models",
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EventSchedule",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=4096, verbose_name="name")),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=4096,
                        verbose_name="description",
                    ),
                ),
                (
                    "effective_date",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="effective date",
                    ),
                ),
                (
                    "effective_date_value_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (20, "Number"),
                            (10, "String"),
                            (40, "Date"),
                            (30, "Classifier"),
                            (50, "Boolean"),
                            (60, "System Attribute"),
                            (70, "User Attribute"),
                            (100, "Relation"),
                            (110, "Selector"),
                            (120, "Button"),
                            (80, "Datetime"),
                        ],
                        default=40,
                        verbose_name="effective date value type",
                    ),
                ),
                (
                    "notify_in_n_days",
                    models.PositiveIntegerField(
                        default=0, verbose_name="notify in N days"
                    ),
                ),
                (
                    "periodicity_n",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="periodicity n",
                    ),
                ),
                (
                    "periodicity_n_value_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (20, "Number"),
                            (10, "String"),
                            (40, "Date"),
                            (30, "Classifier"),
                            (50, "Boolean"),
                            (60, "System Attribute"),
                            (70, "User Attribute"),
                            (100, "Relation"),
                            (110, "Selector"),
                            (120, "Button"),
                            (80, "Datetime"),
                        ],
                        default=20,
                        verbose_name="periodicity n value type",
                    ),
                ),
                (
                    "final_date",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="final date"
                    ),
                ),
                (
                    "final_date_value_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (20, "Number"),
                            (10, "String"),
                            (40, "Date"),
                            (30, "Classifier"),
                            (50, "Boolean"),
                            (60, "System Attribute"),
                            (70, "User Attribute"),
                            (100, "Relation"),
                            (110, "Selector"),
                            (120, "Button"),
                            (80, "Datetime"),
                        ],
                        default=40,
                        verbose_name="final_date value type",
                    ),
                ),
                (
                    "is_auto_generated",
                    models.BooleanField(
                        default=False, verbose_name="is auto generated"
                    ),
                ),
                (
                    "json_data",
                    models.TextField(blank=True, null=True, verbose_name="json data"),
                ),
            ],
            options={
                "verbose_name": "event schedule",
                "verbose_name_plural": "event schedules",
                "ordering": ["effective_date"],
            },
        ),
        migrations.CreateModel(
            name="EventScheduleAction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="transaction type",
                    ),
                ),
                (
                    "text",
                    models.CharField(
                        blank=True, default="", max_length=4096, verbose_name="text"
                    ),
                ),
                (
                    "is_sent_to_pending",
                    models.BooleanField(
                        default=True, verbose_name="is sent to pending"
                    ),
                ),
                (
                    "is_book_automatic",
                    models.BooleanField(default=True, verbose_name="is book automatic"),
                ),
                (
                    "button_position",
                    models.IntegerField(default=0, verbose_name="button position"),
                ),
                (
                    "json_data",
                    models.TextField(blank=True, null=True, verbose_name="json data"),
                ),
            ],
            options={
                "verbose_name": "event schedule action",
                "verbose_name_plural": "event schedule actions",
                "ordering": ["is_book_automatic", "button_position"],
            },
        ),
        migrations.CreateModel(
            name="EventScheduleConfig",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default="", max_length=4096, verbose_name="name"
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=4096,
                        verbose_name="description",
                    ),
                ),
                (
                    "notify_in_n_days",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="notify in N days"
                    ),
                ),
                (
                    "action_text",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="action text",
                    ),
                ),
                (
                    "action_is_sent_to_pending",
                    models.BooleanField(
                        default=True, verbose_name="action is sent to pending"
                    ),
                ),
                (
                    "action_is_book_automatic",
                    models.BooleanField(
                        default=True, verbose_name="action is book automatic"
                    ),
                ),
            ],
            options={
                "verbose_name": "event schedule config",
                "verbose_name_plural": "event schedule configs",
            },
        ),
        migrations.CreateModel(
            name="ExposureCalculationModel",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="user code"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="name"
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="short name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="description"
                    ),
                ),
            ],
            options={
                "verbose_name": "Exposure calculation model",
                "verbose_name_plural": "Exposure calculation models ",
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GeneratedEvent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "effective_date",
                    models.DateField(
                        db_index=True,
                        default=poms.common.utils.date_now,
                        verbose_name="effective date",
                    ),
                ),
                (
                    "effective_date_notified",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        verbose_name="effective date notified",
                    ),
                ),
                (
                    "notification_date",
                    models.DateField(
                        db_index=True,
                        default=poms.common.utils.date_now,
                        verbose_name="notification date",
                    ),
                ),
                (
                    "notification_date_notified",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        verbose_name="notification date notified",
                    ),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "New"),
                            (2, "Informed"),
                            (3, "Booked (system, default)"),
                            (4, "Booked (user, actions)"),
                            (5, "Booked (user, default)"),
                            (6, "Booked, pending (system, default)"),
                            (7, "Booked, pending (user, actions)"),
                            (8, "Booked, pending (user, default)"),
                            (9, "Error"),
                        ],
                        db_index=True,
                        default=1,
                        verbose_name="status",
                    ),
                ),
                (
                    "status_date",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="status date",
                    ),
                ),
                ("position", models.FloatField(default=0.0, verbose_name="position")),
                (
                    "json_data",
                    models.TextField(blank=True, null=True, verbose_name="json data"),
                ),
            ],
            options={
                "verbose_name": "generated event",
                "verbose_name_plural": "generated events",
                "ordering": ["effective_date"],
            },
        ),
        migrations.CreateModel(
            name="Instrument",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="user code"
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "short_name",
                    models.TextField(blank=True, null=True, verbose_name="short name"),
                ),
                (
                    "public_name",
                    models.CharField(
                        blank=True,
                        help_text="used if user does not have permissions to view object",
                        max_length=255,
                        null=True,
                        verbose_name="public name",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="notes"),
                ),
                (
                    "is_enabled",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="is enabled"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="modified"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        db_index=True, default=False, verbose_name="is deleted"
                    ),
                ),
                (
                    "deleted_user_code",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="deleted user code",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "has_linked_with_portfolio",
                    models.BooleanField(
                        default=False, verbose_name="has linked with portfolio"
                    ),
                ),
                (
                    "price_multiplier",
                    models.FloatField(default=1.0, verbose_name="price multiplier"),
                ),
                (
                    "accrued_multiplier",
                    models.FloatField(default=1.0, verbose_name="accrued multiplier"),
                ),
                (
                    "default_price",
                    models.FloatField(default=0.0, verbose_name="default price"),
                ),
                (
                    "default_accrued",
                    models.FloatField(default=0.0, verbose_name="default accrued"),
                ),
                (
                    "user_text_1",
                    models.CharField(
                        blank=True,
                        help_text="User specified field 1",
                        max_length=255,
                        null=True,
                        verbose_name="user text 1",
                    ),
                ),
                (
                    "user_text_2",
                    models.CharField(
                        blank=True,
                        help_text="User specified field 2",
                        max_length=255,
                        null=True,
                        verbose_name="user text 2",
                    ),
                ),
                (
                    "user_text_3",
                    models.CharField(
                        blank=True,
                        help_text="User specified field 3",
                        max_length=255,
                        null=True,
                        verbose_name="user text 3",
                    ),
                ),
                (
                    "reference_for_pricing",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        verbose_name="reference for pricing",
                    ),
                ),
                (
                    "underlying_long_multiplier",
                    models.FloatField(
                        default=1.0, verbose_name="underlying long multiplier"
                    ),
                ),
                (
                    "underlying_short_multiplier",
                    models.FloatField(
                        default=1.0, verbose_name="underlying short multiplier"
                    ),
                ),
                (
                    "maturity_date",
                    models.DateField(
                        default=datetime.date(9999, 12, 31),
                        null=True,
                        verbose_name="maturity date",
                    ),
                ),
                (
                    "maturity_price",
                    models.FloatField(default=0.0, verbose_name="maturity price"),
                ),
                (
                    "position_reporting",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Direct Position"),
                            (2, "Factor Adjusted Position"),
                            (3, "Do not show"),
                        ],
                        default=1,
                        verbose_name="position reporting",
                    ),
                ),
            ],
            options={
                "verbose_name": "instrument",
                "verbose_name_plural": "instruments",
                "ordering": ["user_code"],
                "permissions": [("manage_instrument", "Can manage instrument")],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstrumentClass",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="user code"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="name"
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="short name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="description"
                    ),
                ),
                (
                    "description_en",
                    models.TextField(
                        blank=True, default="", null=True, verbose_name="description"
                    ),
                ),
            ],
            options={
                "verbose_name": "instrument class",
                "verbose_name_plural": "instrument classes",
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstrumentFactorSchedule",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "effective_date",
                    models.DateField(
                        default=poms.common.utils.date_now,
                        verbose_name="effective date",
                    ),
                ),
                (
                    "factor_value",
                    models.FloatField(default=0.0, verbose_name="factor value"),
                ),
            ],
            options={
                "verbose_name": "instrument factor schedule",
                "verbose_name_plural": "instrument factor schedules",
                "ordering": ["effective_date"],
            },
        ),
        migrations.CreateModel(
            name="InstrumentType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="user code"
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "short_name",
                    models.TextField(blank=True, null=True, verbose_name="short name"),
                ),
                (
                    "public_name",
                    models.CharField(
                        blank=True,
                        help_text="used if user does not have permissions to view object",
                        max_length=255,
                        null=True,
                        verbose_name="public name",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="notes"),
                ),
                (
                    "is_enabled",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="is enabled"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="modified"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        db_index=True, default=False, verbose_name="is deleted"
                    ),
                ),
                (
                    "deleted_user_code",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="deleted user code",
                    ),
                ),
                (
                    "has_second_exposure_currency",
                    models.BooleanField(
                        default=False, verbose_name="has second exposure currency"
                    ),
                ),
                (
                    "instrument_form_layouts",
                    models.TextField(
                        blank=True, null=True, verbose_name="instrument form layouts"
                    ),
                ),
                (
                    "accrued_multiplier",
                    models.FloatField(default=1.0, verbose_name="accrued multiplier"),
                ),
                (
                    "default_accrued",
                    models.FloatField(default=0.0, verbose_name="default accrued"),
                ),
                (
                    "instrument_factor_schedule_json_data",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="instrument factor schedule json data",
                    ),
                ),
                (
                    "long_underlying_instrument",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="long underlying instrument",
                    ),
                ),
                (
                    "underlying_long_multiplier",
                    models.FloatField(
                        default=1.0, verbose_name="underlying long multiplier"
                    ),
                ),
                (
                    "short_underlying_instrument",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="short underlying instrument",
                    ),
                ),
                (
                    "underlying_short_multiplier",
                    models.FloatField(
                        default=1.0, verbose_name="underlying short multiplier"
                    ),
                ),
                (
                    "co_directional_exposure_currency",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="co directional exposure currency",
                    ),
                ),
                (
                    "co_directional_exposure_currency_value_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (20, "Number"),
                            (10, "String"),
                            (40, "Date"),
                            (30, "Classifier"),
                            (50, "Boolean"),
                            (60, "System Attribute"),
                            (70, "User Attribute"),
                            (100, "Relation"),
                            (110, "Selector"),
                            (120, "Button"),
                            (80, "Datetime"),
                        ],
                        default=100,
                        verbose_name="co directional exposure currency value type",
                    ),
                ),
                (
                    "counter_directional_exposure_currency",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="counter directional exposure currency",
                    ),
                ),
                (
                    "counter_directional_exposure_currency_value_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (20, "Number"),
                            (10, "String"),
                            (40, "Date"),
                            (30, "Classifier"),
                            (50, "Boolean"),
                            (60, "System Attribute"),
                            (70, "User Attribute"),
                            (100, "Relation"),
                            (110, "Selector"),
                            (120, "Button"),
                            (80, "Datetime"),
                        ],
                        default=100,
                        verbose_name="counter directional exposure currency value type",
                    ),
                ),
                (
                    "default_price",
                    models.FloatField(default=0.0, verbose_name="default price"),
                ),
                (
                    "maturity_date",
                    models.DateField(
                        default=datetime.date(9999, 12, 31),
                        null=True,
                        verbose_name="maturity date",
                    ),
                ),
                (
                    "maturity_price",
                    models.FloatField(default=0.0, verbose_name="maturity price"),
                ),
                (
                    "price_multiplier",
                    models.FloatField(default=1.0, verbose_name="price multiplier"),
                ),
                (
                    "position_reporting",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Direct Position"),
                            (2, "Factor Adjusted Position"),
                            (3, "Do not show"),
                        ],
                        default=1,
                        verbose_name="position reporting",
                    ),
                ),
                (
                    "reference_for_pricing",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        verbose_name="reference for pricing",
                    ),
                ),
            ],
            options={
                "verbose_name": "instrument type",
                "verbose_name_plural": "instrument types",
                "ordering": ["user_code"],
                "permissions": [
                    ("manage_instrumenttype", "Can manage instrument type")
                ],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstrumentTypeAccrual",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                ("order", models.IntegerField(default=0, verbose_name="order")),
                (
                    "autogenerate",
                    models.BooleanField(default=True, verbose_name="autogenerate"),
                ),
                (
                    "json_data",
                    models.TextField(blank=True, null=True, verbose_name="json data"),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="InstrumentTypeEvent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                ("order", models.IntegerField(default=0, verbose_name="order")),
                (
                    "autogenerate",
                    models.BooleanField(default=True, verbose_name="autogenerate"),
                ),
                (
                    "json_data",
                    models.TextField(blank=True, null=True, verbose_name="json data"),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="InstrumentTypeInstrumentAttribute",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attribute_type_user_code",
                    models.CharField(
                        max_length=255, verbose_name="attribute type user code"
                    ),
                ),
                (
                    "value_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (20, "Number"),
                            (10, "String"),
                            (40, "Date"),
                            (30, "Classifier"),
                        ],
                        default=10,
                        verbose_name="value type",
                    ),
                ),
                (
                    "value_string",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        null=True,
                        verbose_name="value (String)",
                    ),
                ),
                (
                    "value_float",
                    models.FloatField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name="value (Float)",
                    ),
                ),
                (
                    "value_date",
                    models.DateField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name="value (Date)",
                    ),
                ),
                (
                    "value_classifier",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        null=True,
                        verbose_name="value (Classifier)",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InstrumentTypeInstrumentFactorSchedule",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "effective_date",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="effective date",
                    ),
                ),
                (
                    "effective_date_value_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (20, "Number"),
                            (10, "String"),
                            (40, "Date"),
                            (30, "Classifier"),
                            (50, "Boolean"),
                            (60, "System Attribute"),
                            (70, "User Attribute"),
                            (100, "Relation"),
                            (110, "Selector"),
                            (120, "Button"),
                            (80, "Datetime"),
                        ],
                        default=40,
                        verbose_name="effective date",
                    ),
                ),
                (
                    "position_factor_value",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="position factor value",
                    ),
                ),
                (
                    "position_factor_value_value_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (20, "Number"),
                            (10, "String"),
                            (40, "Date"),
                            (30, "Classifier"),
                            (50, "Boolean"),
                            (60, "System Attribute"),
                            (70, "User Attribute"),
                            (100, "Relation"),
                            (110, "Selector"),
                            (120, "Button"),
                            (80, "Datetime"),
                        ],
                        default=40,
                        verbose_name="position factor value value type",
                    ),
                ),
                (
                    "factor_value1",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="factor value 1",
                    ),
                ),
                (
                    "factor_value1_value_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (20, "Number"),
                            (10, "String"),
                            (40, "Date"),
                            (30, "Classifier"),
                            (50, "Boolean"),
                            (60, "System Attribute"),
                            (70, "User Attribute"),
                            (100, "Relation"),
                            (110, "Selector"),
                            (120, "Button"),
                            (80, "Datetime"),
                        ],
                        default=40,
                        verbose_name="factor value1 value type",
                    ),
                ),
                (
                    "factor_value2",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="factor value 2",
                    ),
                ),
                (
                    "factor_value2_value_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (20, "Number"),
                            (10, "String"),
                            (40, "Date"),
                            (30, "Classifier"),
                            (50, "Boolean"),
                            (60, "System Attribute"),
                            (70, "User Attribute"),
                            (100, "Relation"),
                            (110, "Selector"),
                            (120, "Button"),
                            (80, "Datetime"),
                        ],
                        default=40,
                        verbose_name="factor value2 value type",
                    ),
                ),
                (
                    "factor_value3",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="factor value 3 ",
                    ),
                ),
                (
                    "factor_value3_value_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (20, "Number"),
                            (10, "String"),
                            (40, "Date"),
                            (30, "Classifier"),
                            (50, "Boolean"),
                            (60, "System Attribute"),
                            (70, "User Attribute"),
                            (100, "Relation"),
                            (110, "Selector"),
                            (120, "Button"),
                            (80, "Datetime"),
                        ],
                        default=40,
                        verbose_name="factor value3 value type",
                    ),
                ),
            ],
            options={
                "verbose_name": "instrument type instrument factor schedule",
                "verbose_name_plural": "instrument type  instrument factor schedules",
            },
        ),
        migrations.CreateModel(
            name="LongUnderlyingExposure",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="user code"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="name"
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="short name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="description"
                    ),
                ),
            ],
            options={
                "verbose_name": "Long underlying exposure",
                "verbose_name_plural": "Long underlying exposure ",
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ManualPricingFormula",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "expr",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="expression",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, default="", verbose_name="notes"),
                ),
            ],
            options={
                "verbose_name": "manual pricing formula",
                "verbose_name_plural": "manual pricing formulas",
                "ordering": ["pricing_policy"],
            },
        ),
        migrations.CreateModel(
            name="PaymentSizeDetail",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="user code"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="name"
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="short name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="description"
                    ),
                ),
                (
                    "description_en",
                    models.TextField(
                        blank=True, default="", null=True, verbose_name="description"
                    ),
                ),
            ],
            options={
                "verbose_name": "payment size detail",
                "verbose_name_plural": "payment size details",
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Periodicity",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="user code"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="name"
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="short name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="description"
                    ),
                ),
                (
                    "description_en",
                    models.TextField(
                        blank=True, default="", null=True, verbose_name="description"
                    ),
                ),
            ],
            options={
                "verbose_name": "periodicity",
                "verbose_name_plural": "periodicities",
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PriceHistory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="modified"
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        db_index=True,
                        default=poms.common.utils.date_now,
                        verbose_name="date",
                    ),
                ),
                (
                    "principal_price",
                    models.FloatField(default=0.0, verbose_name="principal price"),
                ),
                (
                    "accrued_price",
                    models.FloatField(default=0.0, verbose_name="accrued price"),
                ),
                (
                    "long_delta",
                    models.FloatField(default=0.0, verbose_name="long delta"),
                ),
                (
                    "short_delta",
                    models.FloatField(default=0.0, verbose_name="short delta"),
                ),
                ("ytm", models.FloatField(default=0.0, verbose_name="ytm")),
                ("nav", models.FloatField(default=0.0, verbose_name="nav")),
                ("cash_flow", models.FloatField(default=0.0, verbose_name="cash flow")),
                (
                    "modified_duration",
                    models.FloatField(default=0.0, verbose_name="modified duration"),
                ),
                (
                    "procedure_modified_datetime",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="procedure_modified_datetime",
                    ),
                ),
            ],
            options={
                "verbose_name": "price history",
                "verbose_name_plural": "price histories",
                "ordering": ["date"],
            },
        ),
        migrations.CreateModel(
            name="PricingCondition",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="user code"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="name"
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        null=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="short name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="description"
                    ),
                ),
                (
                    "description_en",
                    models.TextField(
                        blank=True, default="", null=True, verbose_name="description"
                    ),
                ),
            ],
            options={
                "verbose_name": "pricing condition",
                "verbose_name_plural": "pricing conditions ",
                "ordering": ["name"],
                "abstract": False,
                "base_manager_name": "objects",
            },
        ),
        migrations.CreateModel(
            name="PricingPolicy",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="user code"
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "short_name",
                    models.TextField(blank=True, null=True, verbose_name="short name"),
                ),
                (
                    "public_name",
                    models.CharField(
                        blank=True,
                        help_text="used if user does not have permissions to view object",
                        max_length=255,
                        null=True,
                        verbose_name="public name",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="notes"),
                ),
                (
                    "is_enabled",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="is enabled"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="modified"
                    ),
                ),
                (
                    "expr",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=4096,
                        null=True,
                        verbose_name="expression",
                    ),
                ),
            ],
            options={
                "verbose_name": "pricing policy",
                "verbose_name_plural": "pricing policies",
                "ordering": ["user_code"],
                "abstract": False,
                "base_manager_name": "objects",
            },
        ),
        migrations.CreateModel(
            name="ShortUnderlyingExposure",
            fields=[
                (
                    "id",
                    models.PositiveSmallIntegerField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="user code"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="name"
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="short name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="description"
                    ),
                ),
            ],
            options={
                "verbose_name": "Short underlying exposure",
                "verbose_name_plural": "Short underlying exposure ",
                "ordering": ["name"],
                "abstract": False,
            },
        ),
    ]
