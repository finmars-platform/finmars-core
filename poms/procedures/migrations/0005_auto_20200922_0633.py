# Generated by Django 2.2.5 on 2020-09-22 06:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0034_otptoken_is_active'),
        ('procedures', '0004_auto_20200922_0610'),
    ]

    operations = [
        migrations.CreateModel(
            name='PricingParentProcedureInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.MasterUser', verbose_name='master user')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='PricingProcedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('public_name', models.CharField(blank=True, help_text='used if user does not have permissions to view object', max_length=255, null=True, verbose_name='public name')),
                ('is_enabled', models.BooleanField(db_index=True, default=True, verbose_name='is enabled')),
                ('name', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, default='', verbose_name='notes')),
                ('notes_for_users', models.TextField(blank=True, default='', verbose_name='notes for user')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Created by User'), (2, 'Created by Instrument'), (3, 'Created by Currency')], default=1, verbose_name='type')),
                ('price_date_from', models.DateField(blank=True, null=True, verbose_name='price date from')),
                ('price_date_from_expr', models.CharField(blank=True, default='', max_length=1024, null=True, verbose_name='price date from expr')),
                ('price_date_to', models.DateField(blank=True, null=True, verbose_name='price date to')),
                ('price_date_to_expr', models.CharField(blank=True, default='', max_length=1024, null=True, verbose_name='price date to expr')),
                ('price_fill_days', models.PositiveSmallIntegerField(default=0, verbose_name='price fill days')),
                ('price_get_principal_prices', models.BooleanField(default=False, verbose_name='price get principal prices')),
                ('price_get_accrued_prices', models.BooleanField(default=False, verbose_name='price get accrued prices')),
                ('price_get_fx_rates', models.BooleanField(default=False, verbose_name='price get fx rates')),
                ('price_overwrite_principal_prices', models.BooleanField(default=False, verbose_name='price overwrite principal prices')),
                ('price_overwrite_accrued_prices', models.BooleanField(default=False, verbose_name='price overwrite accrued prices')),
                ('price_overwrite_fx_rates', models.BooleanField(default=False, verbose_name='price overwrite fx rates')),
                ('pricing_policy_filters', models.TextField(blank=True, default='', verbose_name='pricing policy filters')),
                ('portfolio_filters', models.TextField(blank=True, default='', verbose_name='portfolio filters')),
                ('instrument_filters', models.TextField(blank=True, default='', verbose_name='instrument filters')),
                ('currency_filters', models.TextField(blank=True, default='', verbose_name='currency filters')),
                ('instrument_type_filters', models.TextField(blank=True, default='', verbose_name='instrument type filters')),
                ('instrument_pricing_scheme_filters', models.TextField(blank=True, default='', verbose_name='instrument pricing scheme filters')),
                ('instrument_pricing_condition_filters', models.TextField(blank=True, default='', verbose_name='instrument pricing condition filters')),
                ('currency_pricing_scheme_filters', models.TextField(blank=True, default='', verbose_name='currency pricing scheme filters')),
                ('currency_pricing_condition_filters', models.TextField(blank=True, default='', verbose_name='currency pricing condition filters')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.MasterUser', verbose_name='master user')),
            ],
            options={
                'unique_together': {('master_user', 'user_code', 'type')},
            },
        ),
        migrations.CreateModel(
            name='PricingProcedureInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('status', models.CharField(choices=[('I', 'Init'), ('P', 'Pending'), ('D', 'Done'), ('E', 'Error')], default='I', max_length=1, verbose_name='status')),
                ('action', models.CharField(blank=True, max_length=255, null=True)),
                ('provider', models.CharField(blank=True, max_length=255, null=True)),
                ('action_verbose', models.CharField(blank=True, max_length=255, null=True)),
                ('provider_verbose', models.CharField(blank=True, max_length=255, null=True)),
                ('successful_prices_count', models.IntegerField(default=0, verbose_name='successful prices count')),
                ('error_prices_count', models.IntegerField(default=0, verbose_name='error prices count')),
                ('error_code', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='error code')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='error message')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.MasterUser', verbose_name='master user')),
                ('parent_procedure_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='procedures', to='procedures.PricingParentProcedureInstance', verbose_name='parent pricing procedure')),
                ('pricing_procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.PricingProcedure', verbose_name='pricing procedure')),
            ],
        ),
        migrations.AddField(
            model_name='pricingparentprocedureinstance',
            name='pricing_procedure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.PricingProcedure', verbose_name='pricing procedure'),
        ),
    ]
