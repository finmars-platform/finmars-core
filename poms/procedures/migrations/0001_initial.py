# Generated by Django 4.1.3 on 2022-12-07 21:41

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ExpressionProcedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.TextField(blank=True, null=True, verbose_name='short name')),
                ('public_name', models.CharField(blank=True, help_text='used if user does not have permissions to view object', max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('is_enabled', models.BooleanField(db_index=True, default=True, verbose_name='is enabled')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='modified')),
                ('notes_for_users', models.TextField(blank=True, default='', verbose_name='notes for user')),
                ('code', models.TextField(blank=True, null=True, verbose_name='code')),
                ('json_data', models.TextField(blank=True, null=True, verbose_name='json data')),
            ],
            options={
                'ordering': ['user_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExpressionProcedureContextVariable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('name', models.CharField(max_length=255)),
                ('expression', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='expression')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
            ],
        ),
        migrations.CreateModel(
            name='ExpressionProcedureInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='modified')),
                ('status', models.CharField(choices=[('I', 'Init'), ('P', 'Pending'), ('D', 'Done'), ('E', 'Error')], default='I', max_length=1, verbose_name='status')),
                ('started_by', models.CharField(choices=[('M', 'Member'), ('S', 'Schedule')], default='M', max_length=1, verbose_name='started by')),
                ('error_code', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='error code')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='error message')),
                ('action', models.CharField(blank=True, max_length=255, null=True)),
                ('provider', models.CharField(blank=True, max_length=255, null=True)),
                ('action_verbose', models.CharField(blank=True, max_length=255, null=True)),
                ('provider_verbose', models.CharField(blank=True, max_length=255, null=True)),
                ('calculated_options_data', models.TextField(blank=True, null=True, verbose_name='calculated options')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('result', models.TextField(blank=True, null=True, verbose_name='result')),
                ('log', models.TextField(blank=True, null=True, verbose_name='log')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='PricingParentProcedureInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='PricingProcedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.TextField(blank=True, null=True, verbose_name='short name')),
                ('public_name', models.CharField(blank=True, help_text='used if user does not have permissions to view object', max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('is_enabled', models.BooleanField(db_index=True, default=True, verbose_name='is enabled')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='modified')),
                ('notes_for_users', models.TextField(blank=True, default='', verbose_name='notes for user')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Created by User'), (2, 'Created by Instrument'), (3, 'Created by Currency')], default=1, verbose_name='type')),
                ('price_date_from', models.DateField(blank=True, null=True, verbose_name='price date from')),
                ('price_date_from_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='price date from expr')),
                ('price_date_to', models.DateField(blank=True, null=True, verbose_name='price date to')),
                ('price_date_to_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='price date to expr')),
                ('price_fill_days', models.PositiveSmallIntegerField(default=0, verbose_name='price fill days')),
                ('price_get_principal_prices', models.BooleanField(default=False, verbose_name='price get principal prices')),
                ('price_get_accrued_prices', models.BooleanField(default=False, verbose_name='price get accrued prices')),
                ('price_get_fx_rates', models.BooleanField(default=False, verbose_name='price get fx rates')),
                ('price_overwrite_principal_prices', models.BooleanField(default=False, verbose_name='price overwrite principal prices')),
                ('price_overwrite_accrued_prices', models.BooleanField(default=False, verbose_name='price overwrite accrued prices')),
                ('price_overwrite_fx_rates', models.BooleanField(default=False, verbose_name='price overwrite fx rates')),
                ('pricing_policy_filters', models.TextField(blank=True, default='', verbose_name='pricing policy filters')),
                ('portfolio_filters', models.TextField(blank=True, default='', verbose_name='portfolio filters')),
                ('instrument_filters', models.TextField(blank=True, default='', verbose_name='instrument filters')),
                ('currency_filters', models.TextField(blank=True, default='', verbose_name='currency filters')),
                ('instrument_type_filters', models.TextField(blank=True, default='', verbose_name='instrument type filters')),
                ('instrument_pricing_scheme_filters', models.TextField(blank=True, default='', verbose_name='instrument pricing scheme filters')),
                ('instrument_pricing_condition_filters', models.TextField(blank=True, default='', verbose_name='instrument pricing condition filters')),
                ('currency_pricing_scheme_filters', models.TextField(blank=True, default='', verbose_name='currency pricing scheme filters')),
                ('currency_pricing_condition_filters', models.TextField(blank=True, default='', verbose_name='currency pricing condition filters')),
            ],
        ),
        migrations.CreateModel(
            name='PricingProcedureInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='modified')),
                ('status', models.CharField(choices=[('I', 'Init'), ('P', 'Pending'), ('D', 'Done'), ('E', 'Error')], default='I', max_length=1, verbose_name='status')),
                ('started_by', models.CharField(choices=[('M', 'Member'), ('S', 'Schedule')], default='M', max_length=1, verbose_name='started by')),
                ('error_code', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='error code')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='error message')),
                ('action', models.CharField(blank=True, max_length=255, null=True)),
                ('provider', models.CharField(blank=True, max_length=255, null=True)),
                ('action_verbose', models.CharField(blank=True, max_length=255, null=True)),
                ('provider_verbose', models.CharField(blank=True, max_length=255, null=True)),
                ('successful_prices_count', models.IntegerField(default=0, verbose_name='successful prices count')),
                ('error_prices_count', models.IntegerField(default=0, verbose_name='error prices count')),
                ('json_request_data', models.TextField(blank=True, null=True, verbose_name='json request data')),
                ('json_response_data', models.TextField(blank=True, null=True, verbose_name='response data')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequestDataFileProcedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.TextField(blank=True, null=True, verbose_name='short name')),
                ('public_name', models.CharField(blank=True, help_text='used if user does not have permissions to view object', max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('is_enabled', models.BooleanField(db_index=True, default=True, verbose_name='is enabled')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='modified')),
                ('notes_for_users', models.TextField(blank=True, default='', verbose_name='notes for user')),
                ('scheme_type', models.CharField(choices=[['transaction_import', 'Transaction Import'], ['simple_import', 'Simple Import']], default='transaction_import', max_length=255)),
                ('scheme_user_code', models.CharField(max_length=255)),
                ('date_from', models.DateField(blank=True, null=True, verbose_name='price date from')),
                ('date_from_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='price date from expr')),
                ('date_to', models.DateField(blank=True, null=True, verbose_name='price date to')),
                ('date_to_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='price date to expr')),
                ('json_data', models.TextField(blank=True, null=True, verbose_name='json data')),
            ],
            options={
                'ordering': ['user_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequestDataFileProcedureInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='modified')),
                ('status', models.CharField(choices=[('I', 'Init'), ('P', 'Pending'), ('D', 'Done'), ('E', 'Error')], default='I', max_length=1, verbose_name='status')),
                ('started_by', models.CharField(choices=[('M', 'Member'), ('S', 'Schedule')], default='M', max_length=1, verbose_name='started by')),
                ('error_code', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='error code')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='error message')),
                ('action', models.CharField(blank=True, max_length=255, null=True)),
                ('provider', models.CharField(blank=True, max_length=255, null=True)),
                ('action_verbose', models.CharField(blank=True, max_length=255, null=True)),
                ('provider_verbose', models.CharField(blank=True, max_length=255, null=True)),
                ('private_key', models.TextField(blank=True, null=True, verbose_name='private key')),
                ('public_key', models.TextField(blank=True, null=True, verbose_name='public key')),
                ('symmetric_key', models.TextField(blank=True, null=True, verbose_name='symmetric key')),
                ('date_from', models.DateField(blank=True, null=True, verbose_name='date from')),
                ('date_to', models.DateField(blank=True, null=True, verbose_name='date to')),
                ('json_request_data', models.TextField(blank=True, null=True, verbose_name='json data')),
                ('response_data', models.TextField(blank=True, null=True, verbose_name='response data')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
    ]
