# Generated by Django 4.2.20 on 2025-04-16 07:59

import json
from django.db import migrations, connection

task_name = 'Export historical records everyday {}'


def get_current_schema_name(apps, schema_editor):
    with connection.cursor() as cursor:
        cursor.execute("SELECT current_schema()")
        schema_name = cursor.fetchone()[0]
    return schema_name


def create_crontab_task(apps, schema_editor):
    CrontabSchedule = apps.get_model('django_celery_beat', 'CrontabSchedule')
    PeriodicTask = apps.get_model('django_celery_beat', 'PeriodicTask')

    schema_name = get_current_schema_name(apps, schema_editor)
    
    # Run every day at 12:30 AM
    schedule, created = CrontabSchedule.objects.get_or_create(
        minute='*',
        hour='4',
        day_of_week='*',
        day_of_month='*',
        month_of_year='*',
    )
    full_task_name = task_name.format(schema_name)

    PeriodicTask.objects.filter(name=full_task_name).delete()
    PeriodicTask.objects.create(
        name=full_task_name,
        crontab=schedule,
        task='history.common_export_journal_to_storage',
        kwargs=json.dumps({"context": {"space_code": schema_name}}),
        enabled=True
    )

def remove_crontab_task(apps, schema_editor):
    PeriodicTask = apps.get_model('django_celery_beat', 'PeriodicTask')

    schema_name = get_current_schema_name(apps, schema_editor)

    PeriodicTask.objects.filter(name=task_name.format(schema_name)).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('history', '0009_alter_historicalrecord_options_and_more'),
    ]

    operations = [
        migrations.RunPython(create_crontab_task, remove_crontab_task),
    ]
