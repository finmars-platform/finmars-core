# Generated by Django 4.1.3 on 2023-06-06 21:59

from django.db import migrations, models


from django.db import connection
from django.db import migrations, models


def get_all_records(table_name):
    with connection.cursor() as cursor:
        cursor.execute("SELECT * FROM %s" % table_name)
        columns = [col[0] for col in cursor.description]
        rows = [
            dict(zip(columns, row))
            for row in cursor.fetchall()
        ]

    return rows


def forwards_func(apps, schema_editor):
    # print("forwards_func")

    from poms.transactions.models import TransactionType, TransactionTypeGroup
    items = get_all_records('transactions_transactiontype')

    print('items count %s' % len(items))

    if len(items):
        print('item %s' % items[0])

    index = 0

    for item in items:

        ttype = TransactionType.objects.get(id=item['id'])

        try:
            if item.get('group_old_id', None):
                group_user_code = \
                    TransactionTypeGroup.objects.filter(id=item['transaction_type_old_id']).values_list('user_code', flat=True)[0]

                ttype.group = group_user_code
                index = index + 1

                ttype.save()

        except Exception as e:
            print("Error: %s" % e)

    print('items updated %s' % index)


def reverse_func(apps, schema_editor):
    pass



class Migration(migrations.Migration):

    dependencies = [
        ('transactions', '0029_transactiontype_group'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
