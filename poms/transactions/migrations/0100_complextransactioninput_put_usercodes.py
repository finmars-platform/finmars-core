# Generated by Django 2.2.5 on 2022-01-05 14:49

# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2019-02-21 11:34
from __future__ import unicode_literals

from django.db import migrations


def fix_transactions(apps, schema_editor):
    TransactionTypeActionInstrument = apps.get_model("transactions", "TransactionTypeActionInstrument")
    TransactionTypeActionTransaction = apps.get_model("transactions", "TransactionTypeActionTransaction")

    counter = 0

    for action in TransactionTypeActionInstrument.objects.select_related('instrument_type', 'pricing_currency',
                                                                         'accrued_currency',
                                                                         'payment_size_detail').all():

        if action.instrument_type:
            action.instrument_type_expr = action.instrument_type.user_code

        if action.pricing_currency:
            action.pricing_currency_expr = action.pricing_currency.user_code

        if action.accrued_currency:
            action.accrued_currency_expr = action.accrued_currency.user_code

        if action.payment_size_detail:
            action.payment_size_detail_expr = action.payment_size_detail.user_code

        action.save()

        counter = counter + 1

    print('TransactionTypeActionInstrument processed %s' % counter)

    counter = 0

    for action in TransactionTypeActionTransaction.objects.select_related('instrument', 'transaction_currency',
                                                                          'settlement_currency', 'portfolio',
                                                                          'account_position', 'account_cash',
                                                                          'account_interim',
                                                                          'strategy1_position', 'strategy1_cash',
                                                                          'strategy2_position', 'strategy2_cash',
                                                                          'strategy3_position', 'strategy3_cash',
                                                                          'linked_instrument', 'allocation_balance',
                                                                          'allocation_pl', 'responsible',
                                                                          'counterparty').all():

        if action.instrument:
            action.instrument_expr = action.instrument.user_code

        if action.transaction_currency:
            action.transaction_currency_expr = action.transaction_currency.user_code

        if action.settlement_currency:
            action.settlement_currency_expr = action.settlement_currency.user_code

        if action.portfolio:
            action.portfolio_expr = action.portfolio.user_code

        if action.account_position:
            action.account_position_expr = action.account_position.user_code

        if action.account_cash:
            action.account_cash_expr = action.account_cash.user_code

        if action.account_interim:
            action.account_interim_expr = action.account_interim.user_code

        if action.strategy1_position:
            action.strategy1_position_expr = action.strategy1_position.user_code

        if action.strategy1_cash:
            action.strategy1_cash_expr = action.strategy1_cash.user_code

        if action.strategy2_position:
            action.strategy2_position_expr = action.strategy2_position.user_code

        if action.strategy2_cash:
            action.strategy2_cash_expr = action.strategy2_cash.user_code

        if action.strategy3_position:
            action.strategy3_position_expr = action.strategy3_position.user_code

        if action.strategy3_cash:
            action.strategy3_cash_expr = action.strategy3_cash.user_code

        if action.linked_instrument:
            action.linked_instrument_expr = action.linked_instrument.user_code

        if action.allocation_balance:
            action.allocation_balance_expr = action.allocation_balance.user_code

        if action.allocation_pl:
            action.allocation_pl_expr = action.allocation_pl.user_code

        if action.responsible:
            action.responsible_expr = action.responsible.user_code

        if action.counterparty:
            action.counterparty_expr = action.counterparty.user_code

        action.save()

        counter = counter + 1

    print('TransactionTypeActionTransaction processed %s' % counter)


def rev(apps, schema_editor):
    # the reverse goes here if you want to copy company names into customer again if you migrate backwards.
    pass


class Migration(migrations.Migration):
    dependencies = [
        ('transactions', '0099_auto_20220210_2210'),
    ]

    operations = [
        migrations.RunPython(fix_transactions, rev)
    ]
