# Generated by Django 4.1.3 on 2022-12-07 21:52

from django.db import migrations, models
import django.db.models.deletion
import poms.common.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('procedures', '0001_initial'),
        ('currencies', '0001_initial'),
        ('instruments', '0001_initial'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CurrencyPricingScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='user code')),
                ('short_name', models.TextField(blank=True, null=True, verbose_name='short name')),
                ('public_name', models.CharField(blank=True, help_text='used if user does not have permissions to view object', max_length=255, null=True, verbose_name='public name')),
                ('is_enabled', models.BooleanField(db_index=True, default=True, verbose_name='is enabled')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, default='', verbose_name='notes')),
                ('notes_for_users', models.TextField(blank=True, default='', verbose_name='notes for users')),
                ('notes_for_parameter', models.TextField(blank=True, default='', verbose_name='notes for parameter')),
                ('error_handler', models.PositiveSmallIntegerField(choices=[(1, 'Add to Error Table and notify in the End'), (2, 'Add to Error Table, no notification'), (3, 'Add to Error Table, notify directly'), (4, 'Notify Directly and request Prices')], default=1, verbose_name='error handler')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.masteruser', verbose_name='master user')),
            ],
        ),
        migrations.CreateModel(
            name='CurrencyPricingSchemeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, default='', verbose_name='notes')),
                ('input_type', models.PositiveSmallIntegerField(choices=[(1, 'None'), (2, 'Single Parameter'), (3, 'Multiple Parameters')], default=1, verbose_name='input type')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentPricingScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='user code')),
                ('short_name', models.TextField(blank=True, null=True, verbose_name='short name')),
                ('public_name', models.CharField(blank=True, help_text='used if user does not have permissions to view object', max_length=255, null=True, verbose_name='public name')),
                ('is_enabled', models.BooleanField(db_index=True, default=True, verbose_name='is enabled')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, default='', verbose_name='notes')),
                ('notes_for_users', models.TextField(blank=True, default='', verbose_name='notes for users')),
                ('notes_for_parameter', models.TextField(blank=True, default='', verbose_name='notes for parameter')),
                ('error_handler', models.PositiveSmallIntegerField(choices=[(1, 'Add to Error Table and notify in the End'), (2, 'Add to Error Table, no notification'), (3, 'Add to Error Table, notify directly'), (4, 'Notify Directly and request Prices')], default=1, verbose_name='error handler')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.masteruser', verbose_name='master user')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentPricingSchemeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, default='', verbose_name='notes')),
                ('input_type', models.PositiveSmallIntegerField(choices=[(1, 'None'), (2, 'Single Parameter'), (3, 'Multiple Parameters')], default=1, verbose_name='input type')),
            ],
        ),
        migrations.CreateModel(
            name='PriceHistoryError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='modified')),
                ('date', models.DateField(db_index=True, default=poms.common.utils.date_now, verbose_name='date')),
                ('principal_price', models.FloatField(blank=True, default=None, null=True, verbose_name='principal price')),
                ('accrued_price', models.FloatField(blank=True, default=None, null=True, verbose_name='accrued price')),
                ('price_error_text', models.TextField(blank=True, default='', verbose_name='price error text')),
                ('accrual_error_text', models.TextField(blank=True, default='', verbose_name='accrual error text')),
                ('status', models.CharField(choices=[('E', 'Error'), ('S', 'Skip'), ('C', 'Created'), ('O', 'Overwritten'), ('R', 'Requested')], default='E', max_length=1, verbose_name='status')),
                ('error_text', models.TextField(blank=True, default='', verbose_name='error text')),
                ('created', models.DateTimeField(blank=True, db_index=True, default=None, null=True, verbose_name='created')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.instrument', verbose_name='instrument')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.masteruser', verbose_name='master user')),
                ('pricing_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.pricingpolicy', verbose_name='pricing policy')),
                ('pricing_scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.instrumentpricingscheme', verbose_name='pricing scheme')),
                ('procedure_instance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='procedures.pricingprocedureinstance', verbose_name='pricing procedure instance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentPricingSchemeWtradeParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expr', models.CharField(blank=True, default='', max_length=4096, verbose_name='expr')),
                ('pricing_error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='pricing error text expr')),
                ('accrual_calculation_method', models.PositiveSmallIntegerField(choices=[(1, 'Not applicable'), (2, 'As per Accrual Schedule'), (3, 'As per Formula')], default=1, verbose_name='accrual calculation method')),
                ('accrual_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='accrual expr')),
                ('accrual_error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='accrual error text expr')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date')], default=10, verbose_name='value type')),
                ('instrument_pricing_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.instrumentpricingscheme', verbose_name='Instrument Pricing Scheme')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentPricingSchemeSingleParameterFormulaParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expr', models.CharField(blank=True, default='', max_length=4096, verbose_name='expr')),
                ('pricing_error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='pricing error text')),
                ('accrual_calculation_method', models.PositiveSmallIntegerField(choices=[(1, 'Not applicable'), (2, 'As per Accrual Schedule'), (3, 'As per Formula')], default=1, verbose_name='accrual calculation method')),
                ('accrual_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='accrual expr')),
                ('accrual_error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='accrual error text expr')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date')], default=10, verbose_name='value type')),
                ('instrument_pricing_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.instrumentpricingscheme', verbose_name='Instrument Pricing Scheme')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentPricingSchemeMultipleParametersFormulaParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expr', models.CharField(blank=True, default='', max_length=4096, verbose_name='expr')),
                ('pricing_error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='pricing error text')),
                ('accrual_calculation_method', models.PositiveSmallIntegerField(choices=[(1, 'Not applicable'), (2, 'As per Accrual Schedule'), (3, 'As per Formula')], default=1, verbose_name='accrual calculation method')),
                ('accrual_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='accrual expr')),
                ('accrual_error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='accrual error text expr')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date')], default=10, verbose_name='value type')),
                ('json_data', models.TextField(blank=True, null=True, verbose_name='json data')),
                ('instrument_pricing_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.instrumentpricingscheme', verbose_name='Instrument Pricing Scheme')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentPricingSchemeManualPricingParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('instrument_pricing_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.instrumentpricingscheme', verbose_name='Instrument Pricing Scheme')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentPricingSchemeCbondsParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expr', models.CharField(blank=True, default='', max_length=4096, verbose_name='expr')),
                ('pricing_error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='pricing error text expr')),
                ('accrual_calculation_method', models.PositiveSmallIntegerField(choices=[(1, 'Not applicable'), (2, 'As per Accrual Schedule'), (3, 'As per Formula')], default=1, verbose_name='accrual calculation method')),
                ('accrual_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='accrual expr')),
                ('accrual_error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='accrual error text expr')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date')], default=10, verbose_name='value type')),
                ('instrument_pricing_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.instrumentpricingscheme', verbose_name='Instrument Pricing Scheme')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentPricingSchemeBloombergParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expr', models.CharField(blank=True, default='', max_length=4096, verbose_name='expr')),
                ('pricing_error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='pricing error text expr')),
                ('accrual_calculation_method', models.PositiveSmallIntegerField(choices=[(1, 'Not applicable'), (2, 'As per Accrual Schedule'), (3, 'As per Formula')], default=1, verbose_name='accrual calculation method')),
                ('accrual_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='accrual expr')),
                ('accrual_error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='accrual error text expr')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date')], default=10, verbose_name='value type')),
                ('bid_historical', models.CharField(blank=True, max_length=50, null=True, verbose_name='bid historical')),
                ('bid_yesterday', models.CharField(blank=True, max_length=50, null=True, verbose_name='bid yesterday')),
                ('ask_historical', models.CharField(blank=True, max_length=50, null=True, verbose_name='ask historical')),
                ('ask_yesterday', models.CharField(blank=True, max_length=50, null=True, verbose_name='ask yesterday')),
                ('last_historical', models.CharField(blank=True, max_length=50, null=True, verbose_name='last historical')),
                ('last_yesterday', models.CharField(blank=True, max_length=50, null=True, verbose_name='last yesterday')),
                ('accrual_historical', models.CharField(blank=True, max_length=50, null=True, verbose_name='accrual historical')),
                ('accrual_yesterday', models.CharField(blank=True, max_length=50, null=True, verbose_name='accrual yesterday')),
                ('instrument_pricing_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.instrumentpricingscheme', verbose_name='Instrument Pricing Scheme')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentPricingSchemeAlphavParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expr', models.CharField(blank=True, default='', max_length=4096, verbose_name='expr')),
                ('pricing_error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='pricing error text expr')),
                ('accrual_calculation_method', models.PositiveSmallIntegerField(choices=[(1, 'Not applicable'), (2, 'As per Accrual Schedule'), (3, 'As per Formula')], default=1, verbose_name='accrual calculation method')),
                ('accrual_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='accrual expr')),
                ('accrual_error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='accrual error text expr')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date')], default=10, verbose_name='value type')),
                ('instrument_pricing_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.instrumentpricingscheme', verbose_name='Instrument Pricing Scheme')),
            ],
        ),
        migrations.AddField(
            model_name='instrumentpricingscheme',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.instrumentpricingschemetype', verbose_name='type'),
        ),
        migrations.CreateModel(
            name='InstrumentForwardsPricingSchemeBloombergParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expr', models.CharField(blank=True, default='', max_length=4096, verbose_name='expr')),
                ('pricing_error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='pricing error text expr')),
                ('accrual_calculation_method', models.PositiveSmallIntegerField(choices=[(1, 'Not applicable'), (2, 'As per Accrual Schedule'), (3, 'As per Formula')], default=1, verbose_name='accrual calculation method')),
                ('accrual_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='accrual expr')),
                ('accrual_error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='accrual error text expr')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date')], default=10, verbose_name='value type')),
                ('price_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='price code')),
                ('json_data', models.TextField(blank=True, null=True, verbose_name='json data')),
                ('instrument_pricing_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.instrumentpricingscheme', verbose_name='Instrument Pricing Scheme')),
            ],
        ),
        migrations.CreateModel(
            name='CurrencyPricingSchemeSingleParameterFormulaParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expr', models.CharField(blank=True, default='', max_length=4096, verbose_name='expr')),
                ('error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='error text expr')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date')], default=10, verbose_name='value type')),
                ('currency_pricing_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.currencypricingscheme', verbose_name='Currency Pricing Scheme')),
            ],
        ),
        migrations.CreateModel(
            name='CurrencyPricingSchemeMultipleParametersFormulaParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expr', models.CharField(blank=True, default='', max_length=4096, verbose_name='expr')),
                ('error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='error text expr')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date')], default=10, verbose_name='value type')),
                ('json_data', models.TextField(blank=True, null=True, verbose_name='json data')),
                ('currency_pricing_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.currencypricingscheme', verbose_name='Currency Pricing Scheme')),
            ],
        ),
        migrations.CreateModel(
            name='CurrencyPricingSchemeManualPricingParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('currency_pricing_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.currencypricingscheme', verbose_name='Currency Pricing Scheme')),
            ],
        ),
        migrations.CreateModel(
            name='CurrencyPricingSchemeFixerParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expr', models.CharField(blank=True, default='', max_length=4096, verbose_name='expr')),
                ('error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='error text expr')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date')], default=10, verbose_name='value type')),
                ('currency_pricing_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.currencypricingscheme', verbose_name='Currency Pricing Scheme')),
            ],
        ),
        migrations.CreateModel(
            name='CurrencyPricingSchemeCbondsParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expr', models.CharField(blank=True, default='', max_length=4096, verbose_name='expr')),
                ('error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='error text expr')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date')], default=10, verbose_name='value type')),
                ('currency_pricing_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.currencypricingscheme', verbose_name='Currency Pricing Scheme')),
            ],
        ),
        migrations.CreateModel(
            name='CurrencyPricingSchemeBloombergParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expr', models.CharField(blank=True, default='', max_length=4096, verbose_name='expr')),
                ('error_text_expr', models.CharField(blank=True, default='', max_length=4096, null=True, verbose_name='error text expr')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('value_type', models.PositiveSmallIntegerField(choices=[(20, 'Number'), (10, 'String'), (40, 'Date')], default=10, verbose_name='value type')),
                ('fx_rate', models.CharField(blank=True, max_length=50, verbose_name='FX rate')),
                ('currency_pricing_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.currencypricingscheme', verbose_name='Currency Pricing Scheme')),
            ],
        ),
        migrations.AddField(
            model_name='currencypricingscheme',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.currencypricingschemetype', verbose_name='type'),
        ),
        migrations.CreateModel(
            name='CurrencyHistoryError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='modified')),
                ('date', models.DateField(db_index=True, default=poms.common.utils.date_now, verbose_name='date')),
                ('fx_rate', models.FloatField(blank=True, default=None, null=True, verbose_name='fx rate')),
                ('error_text', models.TextField(blank=True, default='', verbose_name='error text')),
                ('status', models.CharField(choices=[('E', 'Error'), ('S', 'Skip'), ('C', 'Created'), ('O', 'Overwritten'), ('R', 'Requested')], default='E', max_length=1, verbose_name='status')),
                ('created', models.DateTimeField(blank=True, db_index=True, default=None, null=True, verbose_name='created')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='currencies.currency', verbose_name='currency')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.masteruser', verbose_name='master user')),
                ('pricing_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.pricingpolicy', verbose_name='pricing policy')),
                ('pricing_scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.currencypricingscheme', verbose_name='pricing scheme')),
                ('procedure_instance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='procedures.pricingprocedureinstance', verbose_name='pricing procedure instance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PricingProcedureWtradeInstrumentResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True, verbose_name='date')),
                ('instrument_parameters', models.CharField(blank=True, max_length=255, null=True)),
                ('open_value', models.FloatField(blank=True, null=True, verbose_name='open value')),
                ('close_value', models.FloatField(blank=True, null=True, verbose_name='close value')),
                ('high_value', models.FloatField(blank=True, null=True, verbose_name='high value')),
                ('low_value', models.FloatField(blank=True, null=True, verbose_name='low value')),
                ('volume_value', models.FloatField(blank=True, null=True, verbose_name='volume value')),
                ('open_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('close_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('high_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('low_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('volume_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.instrument', verbose_name='instrument')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.masteruser', verbose_name='master user')),
                ('pricing_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.pricingpolicy', verbose_name='pricing policy')),
                ('pricing_scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.instrumentpricingscheme', verbose_name='pricing scheme')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.pricingprocedureinstance', verbose_name='procedure')),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('master_user', 'instrument', 'date', 'pricing_policy', 'procedure')},
            },
        ),
        migrations.CreateModel(
            name='PricingProcedureFixerCurrencyResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True, verbose_name='date')),
                ('currency_parameters', models.CharField(blank=True, max_length=255, null=True)),
                ('close_value', models.FloatField(blank=True, null=True, verbose_name='close value')),
                ('close_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='currencies.currency', verbose_name='currency')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.masteruser', verbose_name='master user')),
                ('pricing_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.pricingpolicy', verbose_name='pricing policy')),
                ('pricing_scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.currencypricingscheme', verbose_name='pricing scheme')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.pricingprocedureinstance', verbose_name='procedure')),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('master_user', 'currency', 'date', 'pricing_policy', 'procedure')},
            },
        ),
        migrations.CreateModel(
            name='PricingProcedureCbondsInstrumentResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True, verbose_name='date')),
                ('instrument_parameters', models.CharField(blank=True, max_length=255, null=True)),
                ('open_value', models.FloatField(blank=True, null=True, verbose_name='open value')),
                ('close_value', models.FloatField(blank=True, null=True, verbose_name='close value')),
                ('high_value', models.FloatField(blank=True, null=True, verbose_name='high value')),
                ('low_value', models.FloatField(blank=True, null=True, verbose_name='low value')),
                ('volume_value', models.FloatField(blank=True, null=True, verbose_name='volume value')),
                ('open_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('close_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('high_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('low_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('volume_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.instrument', verbose_name='instrument')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.masteruser', verbose_name='master user')),
                ('pricing_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.pricingpolicy', verbose_name='pricing policy')),
                ('pricing_scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.instrumentpricingscheme', verbose_name='pricing scheme')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.pricingprocedureinstance', verbose_name='procedure')),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('master_user', 'instrument', 'date', 'pricing_policy', 'procedure')},
            },
        ),
        migrations.CreateModel(
            name='PricingProcedureCbondsCurrencyResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True, verbose_name='date')),
                ('currency_parameters', models.CharField(blank=True, max_length=255, null=True)),
                ('close_value', models.FloatField(blank=True, null=True, verbose_name='close value')),
                ('close_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='currencies.currency', verbose_name='currency')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.masteruser', verbose_name='master user')),
                ('pricing_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.pricingpolicy', verbose_name='pricing policy')),
                ('pricing_scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.currencypricingscheme', verbose_name='pricing scheme')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.pricingprocedureinstance', verbose_name='procedure')),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('master_user', 'currency', 'date', 'pricing_policy', 'procedure')},
            },
        ),
        migrations.CreateModel(
            name='PricingProcedureBloombergInstrumentResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True, verbose_name='date')),
                ('instrument_parameters', models.CharField(blank=True, max_length=255, null=True)),
                ('ask_parameters', models.CharField(blank=True, max_length=255, null=True, verbose_name='ask parameters')),
                ('ask_value', models.FloatField(blank=True, null=True, verbose_name='ask value')),
                ('ask_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('bid_parameters', models.CharField(blank=True, max_length=255, null=True, verbose_name='bid parameters')),
                ('bid_value', models.FloatField(blank=True, null=True, verbose_name='bid value')),
                ('bid_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('last_parameters', models.CharField(blank=True, max_length=255, null=True, verbose_name='last parameters')),
                ('last_value', models.FloatField(blank=True, null=True, verbose_name='last value')),
                ('last_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('accrual_parameters', models.CharField(blank=True, max_length=255, null=True, verbose_name='accrual parameters')),
                ('accrual_value', models.FloatField(blank=True, null=True, verbose_name='accrual value')),
                ('accrual_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.instrument', verbose_name='instrument')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.masteruser', verbose_name='master user')),
                ('pricing_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.pricingpolicy', verbose_name='pricing policy')),
                ('pricing_scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.instrumentpricingscheme', verbose_name='pricing scheme')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.pricingprocedureinstance', verbose_name='procedure')),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('master_user', 'instrument', 'date', 'pricing_policy', 'procedure')},
            },
        ),
        migrations.CreateModel(
            name='PricingProcedureBloombergForwardInstrumentResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True, verbose_name='date')),
                ('instrument_parameters', models.CharField(blank=True, max_length=255, null=True)),
                ('price_code_parameters', models.CharField(blank=True, max_length=255, null=True, verbose_name='price code parameters')),
                ('price_code_value', models.FloatField(blank=True, null=True, verbose_name='price code value')),
                ('price_code_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('tenor_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='tenor type')),
                ('tenor_clause', models.CharField(blank=True, max_length=255, null=True, verbose_name='tenor clause')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.instrument', verbose_name='instrument')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.masteruser', verbose_name='master user')),
                ('pricing_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.pricingpolicy', verbose_name='pricing policy')),
                ('pricing_scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.instrumentpricingscheme', verbose_name='pricing scheme')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.pricingprocedureinstance', verbose_name='procedure')),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('master_user', 'instrument', 'date', 'pricing_policy', 'procedure', 'reference')},
            },
        ),
        migrations.CreateModel(
            name='PricingProcedureBloombergCurrencyResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True, verbose_name='date')),
                ('currency_parameters', models.CharField(blank=True, max_length=255, null=True)),
                ('fx_rate_parameters', models.CharField(blank=True, max_length=255, null=True, verbose_name='fx rate parameters')),
                ('fx_rate_value', models.FloatField(blank=True, null=True, verbose_name='fx rate value')),
                ('fx_rate_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='currencies.currency', verbose_name='currency')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.masteruser', verbose_name='master user')),
                ('pricing_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.pricingpolicy', verbose_name='pricing policy')),
                ('pricing_scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.currencypricingscheme', verbose_name='pricing scheme')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.pricingprocedureinstance', verbose_name='procedure')),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('master_user', 'currency', 'date', 'pricing_policy', 'procedure')},
            },
        ),
        migrations.CreateModel(
            name='PricingProcedureAlphavInstrumentResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True, verbose_name='date')),
                ('instrument_parameters', models.CharField(blank=True, max_length=255, null=True)),
                ('close_value', models.FloatField(blank=True, null=True, verbose_name='close value')),
                ('close_value_error_text', models.CharField(blank=True, max_length=255, null=True)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.instrument', verbose_name='instrument')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.masteruser', verbose_name='master user')),
                ('pricing_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.pricingpolicy', verbose_name='pricing policy')),
                ('pricing_scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.instrumentpricingscheme', verbose_name='pricing scheme')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.pricingprocedureinstance', verbose_name='procedure')),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('master_user', 'instrument', 'date', 'pricing_policy', 'procedure')},
            },
        ),
        migrations.CreateModel(
            name='InstrumentTypePricingPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, default='', verbose_name='notes')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('json_data', models.TextField(blank=True, null=True, verbose_name='json data')),
                ('overwrite_default_parameters', models.BooleanField(default=False, verbose_name='is default')),
                ('instrument_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_policies', to='instruments.instrumenttype', verbose_name='instrument type')),
                ('pricing_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.pricingpolicy', verbose_name='pricing policy')),
                ('pricing_scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.instrumentpricingscheme', verbose_name='pricing scheme')),
            ],
            options={
                'unique_together': {('instrument_type', 'pricing_policy')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='instrumentpricingscheme',
            unique_together={('user_code', 'master_user')},
        ),
        migrations.CreateModel(
            name='InstrumentPricingPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, default='', verbose_name='notes')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('json_data', models.TextField(blank=True, null=True, verbose_name='json data')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_policies', to='instruments.instrument', verbose_name='instrument')),
                ('pricing_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.pricingpolicy', verbose_name='pricing policy')),
                ('pricing_scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.instrumentpricingscheme', verbose_name='pricing scheme')),
            ],
            options={
                'unique_together': {('instrument', 'pricing_policy')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='currencypricingscheme',
            unique_together={('user_code', 'master_user')},
        ),
        migrations.CreateModel(
            name='CurrencyPricingPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, default='', verbose_name='notes')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_key', models.CharField(blank=True, max_length=255, null=True)),
                ('json_data', models.TextField(blank=True, null=True, verbose_name='json data')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_policies', to='currencies.currency', verbose_name='currency')),
                ('pricing_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.pricingpolicy', verbose_name='pricing policy')),
                ('pricing_scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.currencypricingscheme', verbose_name='pricing scheme')),
            ],
            options={
                'unique_together': {('currency', 'pricing_policy')},
            },
        ),
    ]
