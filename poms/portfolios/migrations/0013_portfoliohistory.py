# Generated by Django 4.2.3 on 2023-11-19 15:07

from django.db import migrations, models
import django.db.models.deletion
import poms.common.utils


class Migration(migrations.Migration):

    dependencies = [
        ('instruments', '0016_instrument_owner_instrumenttype_owner_and_more'),
        ('currencies', '0007_currency_owner'),
        ('users', '0008_alter_member_status'),
        ('portfolios', '0012_portfolioregisterrecord_nav_valuation_currency'),
    ]

    operations = [
        migrations.CreateModel(
            name='PortfolioHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Human Readable Name of the object', max_length=255, verbose_name='name')),
                ('short_name', models.TextField(blank=True, help_text='Short Name of the object. Used in dropdown menus', null=True, verbose_name='short name')),
                ('public_name', models.CharField(blank=True, help_text='Used if user does not have permissions to view object', max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, help_text='Notes, any useful information about the object', null=True, verbose_name='notes')),
                ('is_enabled', models.BooleanField(db_index=True, default=True, verbose_name='is enabled')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='modified')),
                ('user_code', models.CharField(help_text='Unique Code for this object. Used in Configuration and Permissions Logic', max_length=1024, unique=True, verbose_name='user code')),
                ('date', models.DateField(db_index=True, default=poms.common.utils.date_now, verbose_name='date')),
                ('date_from', models.DateField(db_index=True, default=poms.common.utils.date_now, verbose_name='date from')),
                ('period_type', models.CharField(choices=[('ytd', 'YTD'), ('mtd', 'MTD'), ('qtd', 'QTD'), ('inception', 'Inception')], default='ytd', max_length=255, verbose_name='period_type')),
                ('performance_method', models.CharField(choices=[('modified_dietz', 'Modified Dietz'), ('time_weighted', 'Time Weighted')], default='modified_dietz', max_length=255, verbose_name='performance method')),
                ('benchmark', models.CharField(blank=True, default='', max_length=255, verbose_name='benchmark')),
                ('nav', models.FloatField(blank=True, default=0.0, help_text='Net Asset Value', null=True, verbose_name='nav')),
                ('cash_flow', models.FloatField(blank=True, default=0.0, null=True, verbose_name='cash flow')),
                ('cash_inflow', models.FloatField(blank=True, default=0.0, null=True, verbose_name='cash inflow')),
                ('cash_outflow', models.FloatField(blank=True, default=0.0, null=True, verbose_name='cash outflow')),
                ('total', models.FloatField(blank=True, default=0.0, help_text='Total Value of the Portfolio from P&L Report', null=True, verbose_name='total')),
                ('cumulative_return', models.FloatField(blank=True, default=0.0, null=True, verbose_name='cumulative return')),
                ('annualized_return', models.FloatField(blank=True, default=0.0, null=True, verbose_name='annualized return')),
                ('portfolio_volatility', models.FloatField(blank=True, default=0.0, null=True, verbose_name='portfolio volatility')),
                ('annualized_portfolio_volatility', models.FloatField(blank=True, default=0.0, null=True, verbose_name='annualized portfolio volatility')),
                ('sharpe_ratio', models.FloatField(blank=True, default=0.0, null=True, verbose_name='sharpe_ratio')),
                ('max_annualized_drawdown', models.FloatField(blank=True, default=0.0, null=True, verbose_name='max_annualized_drawdown')),
                ('betta', models.FloatField(blank=True, default=0.0, null=True, verbose_name='betta')),
                ('alpha', models.FloatField(blank=True, default=0.0, null=True, verbose_name='alpha')),
                ('correlation', models.FloatField(blank=True, default=0.0, null=True, verbose_name='correlation')),
                ('cost_method', models.ForeignKey(help_text='AVCO / FIFO', on_delete=django.db.models.deletion.CASCADE, to='instruments.costmethod', verbose_name='cost method')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='currencies.currency', verbose_name='currency')),
                ('master_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.masteruser', verbose_name='master user')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.member', verbose_name='owner')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolios.portfolio', verbose_name='portfolio')),
                ('pricing_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.pricingpolicy', verbose_name='pricing policy')),
            ],
            options={
                'unique_together': {('master_user', 'user_code')},
            },
        ),
    ]
