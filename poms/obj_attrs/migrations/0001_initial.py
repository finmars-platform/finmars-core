# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-05 12:27
from __future__ import unicode_literals

import datetime

import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GenericAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.BigIntegerField(db_index=True)),
                ('value_string',
                 models.CharField(blank=True, default='', max_length=255, verbose_name='value (String)')),
                ('value_float', models.FloatField(default=0.0, verbose_name='value (Float)')),
                ('value_date', models.DateField(default=datetime.date(1, 1, 1), verbose_name='value (Date)')),
            ],
            options={
                'ordering': ['attribute_type'],
                'verbose_name_plural': 'attributes',
                'verbose_name': 'attribute',
            },
        ),
        migrations.CreateModel(
            name='GenericAttributeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='user code')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='short name')),
                ('public_name',
                 models.CharField(blank=True, help_text='used if user does not have permissions to view object',
                                  max_length=255, null=True, verbose_name='public name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('value_type', models.PositiveSmallIntegerField(
                    choices=[(20, 'Number'), (10, 'String'), (40, 'Date'), (30, 'Classifier')], default=10,
                    verbose_name='value type')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
            ],
            options={
                'verbose_name': 'attribute type',
                'abstract': False,
                'verbose_name_plural': 'attribute types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GenericAttributeTypeOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='is hidden')),
                ('attribute_type',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options',
                                   to='obj_attrs.GenericAttributeType', verbose_name='attribute type')),
            ],
        ),
        migrations.CreateModel(
            name='GenericClassifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('attribute_type',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classifiers',
                                   to='obj_attrs.GenericAttributeType', verbose_name='attribute type')),
                ('parent',
                 mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                            related_name='children', to='obj_attrs.GenericClassifier',
                                            verbose_name='parent')),
            ],
            options={
                'ordering': ['tree_id', 'level', 'name'],
                'verbose_name_plural': 'classifiers',
                'verbose_name': 'classifier',
            },
        ),
    ]
